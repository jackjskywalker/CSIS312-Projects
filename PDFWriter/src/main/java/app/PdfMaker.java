/*
* CSIS312 Assignment 3 - PDFMaker
* By Ben Turner and Jack Skywalker
* Resources: https://stackoverflow.com/questions/14811618/add-image-to-a-pdf-using-itext
 */

package app;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class PdfMaker {
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    private static Font normal = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL);

    private Document document;
    public PdfMaker()
    {
        document = new Document();
    }

    public boolean createPdf(String fileName, String content)
    {
        try {
            try {
                int i = 1 / fileName.length();
            }
            catch (ArithmeticException exception){
                System.out.println("Error: File name empty");
                return false;
            }
            try {
                int i2 = 1 / content.length();
            }
            catch (ArithmeticException exception){
                System.out.println("Error: File content empty");
                return false;
            }
            fileName = fileName + ".pdf";
            PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();
            addMetaData();
            addTitlePage();
            addContent(content);
            document.close();
            return true;
        } catch (Exception e) {
            System.out.println("Error creating pdf: " + fileName + " Error: " + e.toString());
            return false;
        }
    }

    private void addMetaData() {
        document.addTitle("CSIS 312 Assignment 3");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor(System.getProperty("user.name"));
    }

    private void addTitlePage()
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("PDF Created by iText Java Library", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
                "A long time ago, in the galaxy far far away...",
                smallBold));
        addEmptyLine(preface, 3);

        //Add image to generated pdf
        Image image1 = null;
        try {
            image1 = Image.getInstance("Ben&Jack.jpg");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        //Adjust image alignment
        image1.setAlignment(Element.ALIGN_CENTER);
        image1.scaleAbsolute(450, 250);

        //Add to document
        addEmptyLine(preface, 3);
        document.add(preface);
        document.add(image1);
        // Start a new page
        document.newPage();
    }

    private void addContent(String content) throws DocumentException {
        Anchor anchor = new Anchor("Chapter 1", catFont);
        anchor.setName("First Chapter");

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph(content, normal);
        catPart.addSection(subPara);

        // now add all this to the document
        document.add(catPart);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}

